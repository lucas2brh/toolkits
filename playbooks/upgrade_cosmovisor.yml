---
- name: Upgrade Cosmovisor
  hosts: all
  vars:
    daemon_home: "{{ ansible_env.HOME }}/story"
    tmp_dir: "/tmp"
    binary_name: "cosmovisor"
    download_url: "https://l1-test-dev.s3.us-east-1.amazonaws.com/cosmovisor/cosmovisor"
    service_name: "cosmovisor"
  tasks:
    - name: Check cosmovisor version
      shell: |
        cosmovisor version 2>&1
      register: cosmovisor_version
      environment:
        DAEMON_NAME: "story"
        DAEMON_HOME: "{{ daemon_home }}"
        NO_COLOR: "1"

    - name: Display cosmovisor version
      debug:
        var: cosmovisor_version.stdout_lines

    - name: Verify the download URL is accessible
      uri:
        url: "{{ download_url }}"
        method: HEAD
        return_content: no
      register: url_check

    - name: Fail if the URL is not accessible
      fail:
        msg: "The download URL for Cosmovisor v1.7.0 is not accessible."
      when: url_check.status != 200

    - name: Download Cosmovisor v1.7.0 binary to tmp folder
      get_url:
        url: "{{ download_url }}"
        dest: "{{ tmp_dir }}/{{ binary_name }}"
        mode: '0755'

    - name: Backup the current Cosmovisor binary
      copy:
        src: /usr/local/bin/{{ binary_name }}
        dest: /usr/local/bin/{{ binary_name }}.bak
        remote_src: true
      become: true

    - name: Replace the old Cosmovisor binary with the new version
      copy:
        src: "{{ tmp_dir }}/{{ binary_name }}"
        dest: /usr/local/bin/cosmovisor
        remote_src: true
        mode: '0755'
      become: true

    - name: Restart Cosmovisor service
      service:
        name: cosmovisor
        state: restarted
      become: true

    - name: Check cosmovisor version
      shell: |
        cosmovisor version 2>&1
      register: cosmovisor_version
      environment:
        DAEMON_NAME: "story"
        DAEMON_HOME: "{{ daemon_home }}"
        NO_COLOR: "1"

    - name: Display cosmovisor version
      debug:
        var: cosmovisor_version.stdout_lines

    - name: Remove the temporary binary file
      file:
        path: "{{ tmp_dir }}/{{ binary_name }}"
        state: absent
      become: true